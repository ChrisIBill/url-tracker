# networks:
#   custom:
#     ipam:
#       config:
#         - subnet: 10.5.0.0/16

services:
  mysql:
    image: mysql:latest
    container_name: ${DB_CONTAINER_NAME}
    environment:
      MYSQL_ROOT_USER: $MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  dotnet:
    image: dotnet:latest
    env_file:
      - .env.local
    build:
      context: .
      dockerfile: src/url/Dockerfile
    ports:
      - 8001:8001
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8001
      ConnectionStrings__DefaultConnection: Server=mysql;Port=3306;Database=${MYSQL_DATABASE};User=${MYSQL_ROOT_USER};Password=${MYSQL_ROOT_PASSWORD}

  next:
    image: next:latest
    env_file:
      - .env
    # environment:
    #   - VIRTUAL_HOST=api.url-tracker.com
    #   - VIRTUAL_PORT=4000
    build:
      context: .
      dockerfile: frontend/next/Dockerfile
    ports:
      - 4000:4000
    volumes:
      - /var/lib/next/data
    restart: always

  # nginx-proxy:
  #   image: nginxproxy/nginx-proxy
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     custom:
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./devcerts:/etc/nginx/certs

volumes:
  mysql-data: